- 급여가 많은 순으로 이름, 급여, 부서코드를 조회

    SELECT ename, sal, deptno FROM emp ORDER BY sal DESC;

- 부서별로 급여가 적은 순으로 이름, 급여, 부서코드 조회

    SELECT ename, sal, deptno FROM emp ORDER BY sal;

- 업무가 manager인 직원의 이름, 업무, 급여를 조회

    SELECT ename, job, sal FROM emp WHERE job ='manager';

- 부서가 20이고 업무가 analyst인 직원의 이름, 부서, 업무, 급여를 조회

    SELECT ename, deptno, job, sal FROM emp WHERE deptno =20 and job = 'analyst';

- 급여가 $3000 이상인 직원의 사번, 이름, 업무, 급여를 조회

    SELECT empno, ename, job, sal FROM emp WHERE sal≥3000;

- 급여가 $1500 이상 $2500이하를 받는 직원의 이름, 부서, 업무, 급여를 조회(단, 급여가 많은 순으로 조회)

    SELECT ename, deptmo, job, sal FROM emp WHERE sal between 1500 and 2500 ORDER BY sal desc;

- 업무가 clerk, salesman, analyst인 직원의 이름, 부서, 업무, 급여를 조회

    SELECT ename, deptno, job, sal FROM emp WHERE job in ('clerk','salesman','analyst');

- 1982년 1월 1일 이후에 입사한 직원의 이름, 업무, 입사일자 조회

    SELECT ename, job, hiredate FROM emp WHERE hiredate≥ '1982-01-01';

- 커미션이 없는 직원의 이름, 부서, 업무, 급여, 커미션을 조회

    SELECT ename, deptno, job, sal, comm FROM emp WHERE comm is NULL;

- 커미션이 있는 직원의 이름, 부서, 업무, 급여, 커미션을 조회

    SELECT ename, deptno, job, sal, comm FROM emp WHERE comm is not NULL;

- 이름이 s로 시작하는 직원의 이름, 업무, 급여를 조회

    SELECT ename, job, sal FROM emp WHERE ename like 's%';

- 부서별로 급여 평균(avg()),최저(min()) 급여 조회

    SELECT deptno, avg(sal) '평균 급여', min(sal) '최소 급여' FROM emp GROUP BY deptno;

- 부서별로 급여 평균, 최저 급여 조회(단, 급여 평균이 높은 순으로)

    SELECT avg(sal) '평균 급여', min(sal) '최저 급여', deptno FROM emp GROUP BY deptno ORDER BY sal desc;

- 전체 급여의 합계가 $5000을 초과하는 업무에 대해서 급여의 합계를 조회

    SELECT job, sum(sal) FROM emp GROUP BY job HAVING sum(sal)>5000;

- 전체 급여의 합계가 5000을 초과한느 업무에 대해서 급여합계를 조회(단,salesman제외)

    SELECT job, sum(sal) FROM emp WHERE job ≠ 'salesman' GROUP BY job HAVING sum(sal)>5000;

- 업무가 salesman인 직원들의 급여평균, 최고급여, 최저급여, 합계급여를 조회

    SELECT job, avg(sal), max(sal), min(sal), sum(sal) FROM emp WHERE job= 'salesman';

- 총 직원수

    SELECT count(ename) FROM emp;

    SELECT count(*) FROM emp;

- 업무가 salesman이면 '커미션 있음'이라고 출력하고 그 외 업무는 '커미션 없음'이라고 출력해서 조회

    SELECT ename, job, comm,

    CASE WHEN job='salesman' THEN '커미션 있음' ELSE '커미션 없음' END as '커미션 여부' FROM emp;

- 현재 직원들의 총 급여를 조회

    SELECT ename, sal, comm, (sal+comm) as '총 급여' FROM emp;  ⇒ 커미션이 없는 사람은 값이 나오지 않음

    SELECT ename, sal, comm, (sal+coalesce(comm, 0)) as '총 급여' FROM emp; ⇒ comm에 NULL값이 있으면, 그 값을 0으로 바꿔라(자체 조건문. NULL값만 인식)

- 사번이 7521의 업무와 같고, 급여가 7934보다 많은 직원의 사번, 이름, 업무, 급여를 조회

    SELECT empno, ename, deptno, sal FROM emp WHERE job=(SELECT job FROM emp WHERE empno=7521) and sal>(SELECT sal FROM emp WHERE empno = 7934);

- 업무별로 최소급여를 받는 직원의 사번, 이름, 부서코드를 조회

    SELECT empno, ename, deptno,min(sal) FROM emp GROUP BY job HAVING (SELECT MIN(sal) FROM emp);

- 업무별로 최소급여보다 많이 받는 직원의 사번, 이름, 부서코드를 조회

    SELECT empno, ename, deptno, sal FROM emp WHERE sal > ANY (SELECT MIN(sal) FROM emp GROUP BY job);

- 업무별로 최대급여보다 같거나 적게 많이 받은 직원의 사번, 이름, 부서코드를 조회

    SELECT empno, ename, deptno, sal FROM emp WHERE sal >= (SELECT MAX(sal) FROM emp) ;
    SELECT empno, ename, deptno, sal FROM emp WHERE sal >= ALL (SELECT MAX(sal) FROM emp GROUP BY job);

- 급여와 커미션이 30번 부서에 있는 직원의 급여와 커미션이 같은 직원에 대해 사번, 이름, 부서번호, 급여, 커미션을 조회

    SELECT empno, ename, sal, comm FROM emp WHERE sal IN (SELECT sal FROM emp WHERE deptno = 30) AND comm IN (SELECT comm FROM emp where deptno = 30);

    ⇒ AND를 사용하게 되면 각각 개별로 비교를 하기때문에 miller가 출력된다.(급여와 커미션이 1500과 300인 사람이 없음에도 불구하고)

    SELECT empno, ename, sal, comm FROM emp
    WHERE (sal, comm) IN (SELECT sal, comm FROM emp WHERE deptno = 30); ⇒ 급여와 커미션이 동시에 같은 사람이 출력(miller 는 출력되지 않는다. **노란색 순서는 같아야됨**)

- 직원의 사번, 이름, 업무, 부서번호, 부서명을 조회

    SELECT empno, ename, job, E.deptno, dname FROM emp AS E,dept AS D WHERE E.DEPTNO = D.DEPTNO;

- slaesman의 업무를 수행하는 직원의 사번, 이름, 업무, 부서번호, 부서명을 조회

    SELECT empno, ename, job, E.deptno, dname FROM emp AS E,dept AS D where E.deptno = D.deptno AND job = 'salesman';

- Newyork에서 근무하는 직원의 사번, 이름, 업무, 부서명 조회

    SELECT empno, ename, job, D.deptno, dname FROM emp as E,dept as D
    WHERE E.deptno = D.deptno AND D.LOC = 'New York';

- 직원들의 이름, 급여, 부서명, 근무지를 조회. 단, 부서명과 근무지는 모두 출력할 수 있도록 조회

    SELECT ename, sal, E.deptno, LOC FROM emp E RIGHT OUTER join dept D ON E.deptno = D.deptno;

    CREATE TABLE post(columnNAME	VARCHAR(10), KeyType	VARCHAR(10), NullsUnique VARCHAR(10), DataType	VARCHAR(10),
    MaximunLength	INT);
